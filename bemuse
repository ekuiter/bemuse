#!/bin/bash
set -e

USAGE="usage: $0 [-w <width>] [-h <height>] [-f <framerate>] [-o <offset>] [-v] [-k] <score>"
WIDTH=1280
HEIGHT=720
FRAMERATE=60
OFFSET=2.8

while getopts ':w:h:f:o:vk' opt
do
    case $opt in
        w) WIDTH=$OPTARG;;
        h) HEIGHT=$OPTARG;;
        f) FRAMERATE=$OPTARG;;
        o) OFFSET=$OPTARG;;
        v) VISUALIZE=y;;
        k) KEEP=y;;
        \?) echo $USAGE
            exit 1;;
    esac
done

SCORE=${@:$OPTIND:1}

if [[ -z $SCORE ]]; then
    echo $USAGE
    exit 1
fi

if [[ ! -f $SCORE ]]; then
    echo "Score $SCORE does not exist."
    exit 1
fi

DIR=$(dirname "$SCORE")
BASE=$DIR/$(basename "$SCORE" .mscz)
SELF="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"

if ! command -v convert > /dev/null; then
    echo "ImageMagick not installed."
    exit 1
fi

if command -v ffmpeg > /dev/null; then
    export FFMPEG=ffmpeg
fi
if command -v ffmpeg.exe > /dev/null; then
    export FFMPEG=ffmpeg.exe
fi
if [[ -z $FFMPEG ]]; then
    echo "ffmpeg not found, check PATH!"
    exit 1
fi

if command -v mscore > /dev/null; then
    export MUSESCORE=mscore
fi
if command -v musescore > /dev/null; then
    export MUSESCORE=musescore
fi
if command -v MuseScore3.exe > /dev/null; then
    export MUSESCORE=MuseScore3.exe
fi
if [[ -z $MUSESCORE ]]; then
    echo "MuseScore not found, check PATH!"
    exit 1
fi

# see https://github.com/ekuiter/MIDIVisualizer
if uname -r | grep -q Microsoft; then
    export MIDI_VISUALIZER="$SELF/MIDIVisualizer.exe"
else
    export MIDI_VISUALIZER="$SELF/MIDIVisualizer"
fi

if [[ ! -z $VISUALIZE ]]; then
    cp "$SELF/state.ini" "$DIR/state.ini"
    $MIDI_VISUALIZER "$BASE.mid" "$DIR/state.ini"
    rm "$DIR/state.ini"
    exit 0
fi

if [[ -z $KEEP ]] || [[ ! -f "$BASE.mid" ]]; then
    echo "Exporting MIDI ..."
    $MUSESCORE -o "$BASE.mid" "$SCORE"
fi

if [[ -z $KEEP ]] || [[ ! -f "$BASE.pdf" ]]; then
    echo "Exporting PDF ..."
    $MUSESCORE -o "$BASE.pdf" "$SCORE"
fi

if [[ -z $KEEP ]] || [[ ! -f "$BASE.mp3" ]]; then
    echo "Exporting MP3 ..."
    $MUSESCORE -o "$BASE.mp3" "$SCORE"
fi

if [[ -z $KEEP ]] || [[ ! -f "$BASE.jpg" ]]; then
    echo "Exporting JPG ..."
    $MUSESCORE -o "$BASE.png" "$SCORE"
    convert "$BASE-1.png" -resize 50% -background white -flatten "$BASE.jpg"
    rm "$BASE-"*".png"
fi

if [[ -z $KEEP ]] || [[ ! -f "$BASE.mp4" ]]; then
    echo "Exporting MP4 ..."
    if [[ -z $KEEP ]] || [[ ! -d "$DIR/tmp" ]]; then
        rm -rf "$DIR/tmp"
        mkdir -p "$DIR/tmp"
        cp "$SELF/state.ini" "$DIR/state.ini"
        $MIDI_VISUALIZER "$BASE.mid" "$DIR/state.ini" "$DIR/tmp" $WIDTH $HEIGHT $FRAMERATE
        rm "$DIR/state.ini"
    fi
    NUM=$(ls "$DIR/tmp" | head -n1 | sed 's/[^0-9]*//g' | tr -d '\n' | wc -c)
    $FFMPEG -y -framerate $FRAMERATE -i "$DIR/tmp/output_%0${NUM}d.png" -c:v libx264 -pix_fmt yuv420p -crf 0 "$DIR/tmp.mp4"
    OFFSET_MS=$(echo "$OFFSET * 1000 / 1" | bc)
    $FFMPEG -y -i "$DIR/tmp.mp4" -i "$BASE.mp3" -af "adelay=$OFFSET_MS|$OFFSET_MS" -c:a aac -shortest "$BASE.mp4"
    rm -f "$DIR/tmp.mp4"
    if [[ -z $KEEP ]]; then
        rm -rf "$DIR/tmp"
    fi
fi

echo "Done."